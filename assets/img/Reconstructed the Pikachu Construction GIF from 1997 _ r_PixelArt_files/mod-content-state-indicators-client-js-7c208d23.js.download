import"./faceplate-tooltip-8723976a.js";import{o as t,x as e,i as o,_ as s,n,s as r,h as a,a9 as i,I as d,bL as p,l as c}from"./icon-29bbe755.js";import{a as l,k as u,t as h,W as m,l as b,b as g,_ as f,h as z,S,d as y,a4 as k,a5 as v,o as I}from"./shell-38e4146f.js";import{C as R}from"./comment-b3876d6b.js";import{R as U}from"./modActions-112bd6f6.js";import{P as C}from"./postUpdate-a3d942b6.js";import{l as w}from"./list-item-290baf48.js";import{f as P}from"./post-c7a2ad6d.js";import"./popper-controller-267df72e.js";import"./makeEventDispatcher-ddce7d90.js";import"./post-69fe4f77.js";let j=class extends(l(r)){constructor(){super(...arguments),this.status=U.Reported,this.handlePostUpdate=({postId:t,action:e,value:o})=>{t===this.thingId&&e===C.ignoreReports&&(this.status=o?U.Ignored:U.Dismissed)},this.handleCommentUpdate=({commentId:t,action:e,value:o})=>{t===this.thingId&&e===R.ignoreReports&&(this.status=o?U.Ignored:U.Dismissed)}}connectedCallback(){super.connectedCallback(),this.subscribe(u.PostUpdated,this.handlePostUpdate),this.subscribe(u.CommentUpdated,this.handleCommentUpdate)}disconnectedCallback(){super.disconnectedCallback(),this.unsubscribe(u.PostUpdated,this.handlePostUpdate),this.unsubscribe(u.CommentUpdated,this.handleCommentUpdate)}getStyle(){return t({"--list-icon-color":this.status===U.Reported?"var(--shreddit-color-mods-reported-onBackground)":"var(--color-secondary-onBackground)"})}render(){return this.status===U.Reported?e`<div \n class="bg-mods-reported-background hover:bg-mods-reported-background-hover" \n style="${this.getStyle()}" \n>\n <slot></slot>\n </div>`:e`<details \n class="max-w-fit bg-secondary-background hover:bg-secondary-background-hover" \n style="${this.getStyle()}" \n>\n <summary class="cursor-pointer block list-none" @click="${t=>t.stopPropagation()}">\n <slot name="${this.status}"></slot>\n </summary>\n <slot></slot>\n </details>`}};j.styles=[o`summary::-webkit-details-marker{display:none}`,h],s([n({type:String,attribute:"thing-id"})],j.prototype,"thingId",void 0),s([n({type:String})],j.prototype,"status",void 0),j=s([a("reports-summary-wrapper")],j);const $=m(r);let x=class extends ${constructor(){super(...arguments),this.contentId="",this.isSnoozed=!1,this.reportReason="",this.pubsub=new b(this),this.onPostUpdateAction=t=>{if(t.postId!==this.contentId)return;const{action:e}=t;switch(e){case C.snoozeReporter:this.isSnoozed=!0;break;case C.unsnoozeReporter:this.isSnoozed=!1}},this.onCommentUpdateAction=t=>{if(t.commentId!==this.contentId)return;const{action:e}=t;switch(e){case R.snoozeReporter:this.isSnoozed=!0;break;case R.unsnoozeReporter:this.isSnoozed=!1}}}connectedCallback(){super.connectedCallback(),P(this.contentId)?this.pubsub.subscribe(u.PostUpdated,this.onPostUpdateAction):this.pubsub.subscribe(u.CommentUpdated,this.onCommentUpdateAction)}disconnectedCallback(){super.disconnectedCallback(),P(this.contentId)?this.pubsub.unsubscribe(u.PostUpdated,this.onPostUpdateAction):this.pubsub.unsubscribe(u.CommentUpdated,this.onCommentUpdateAction)}renderReportOverflowMenu(){return e`\n <mod-dropdown-closer>\n <faceplate-dropdown-menu \n @click="${t=>t.stopPropagation()}" \n position="bottom-end" \n>\n ${g({appearance:"plain",size:f.ExtraSmall,children:i({size:d.ExtraSmall})})}\n <faceplate-menu slot="menu">\n ${w({label:this.isSnoozed?"Un-snooze reporter":"Snooze reporter",description:this.isSnoozed?"Receive reports from this user again":"Pause reports from this user for 7 days",leadingIcon:p({size:d.Small}),onClick:this.toggleSnooze})}\n </faceplate-menu>\n </faceplate-dropdown-menu>\n </mod-dropdown-closer>\n `}sendTrackingEvent(t,e,o){const s=o?"snoozereports":"unsnoozereports",n=P(t)?"post":"comment",r=P(t)?t:null,a=P(t)?null:t,i=z({source:"moderator",action:s,noun:n},{...r&&{post:{id:r}},...a&&{comment:{id:a}},...e&&{action_info:{reason:e}}});this.trackEvent(i)}showToast({success:t,isSnoozed:e}){const o=t?e?"Reports from these users will be paused":"Reports from these users will be resumed":"Failed to update reports",s=t?S.info:S.error,n=y("faceplate-alert",{level:s,message:o});this.dispatchEvent(n)}async updateReportState(t){try{const{data:e}=await k({operation:v.UpdateReportState,variables:{input:{itemId:this.contentId,reportText:this.reportReason,isSnoozed:t}}});return e?.updateReport?.ok??!1}catch(t){return!1}}async toggleSnooze(t){const e=!this.isSnoozed;this.sendTrackingEvent(this.contentId,this.reportReason,e);const o=await this.updateReportState(e);o&&(e?P(this.contentId)?this.pubsub.publish(u.PostUpdated,{postId:this.contentId,action:C.snoozeReporter,value:!0}):this.pubsub.publish(u.CommentUpdated,{commentId:this.contentId,action:R.snoozeReporter,value:!0}):P(this.contentId)?this.pubsub.publish(u.PostUpdated,{postId:this.contentId,action:C.unsnoozeReporter,value:!0}):this.pubsub.publish(u.CommentUpdated,{commentId:this.contentId,action:R.unsnoozeReporter,value:!0})),this.showToast({success:o,isSnoozed:this.isSnoozed})}render(){const t={"flex items-center m-0 p-0":!0,"bg-secondary-background":this.isSnoozed};return e`<li class="${I(t)}">\n <slot \n name="${c(this.isSnoozed?"snoozed":void 0)}" \n class="flex-auto block" \n></slot>\n ${this.renderReportOverflowMenu()}\n </li> `}};x.styles=[h],s([n({type:String,attribute:"content-id"})],x.prototype,"contentId",void 0),s([n({type:Boolean,attribute:"is-snoozed"})],x.prototype,"isSnoozed",void 0),s([n({type:String,attribute:"report-reason"})],x.prototype,"reportReason",void 0),x=s([a("user-report-summary")],x);
//# sourceMappingURL=mod-content-state-indicators-client-js-7c208d23.js.map
