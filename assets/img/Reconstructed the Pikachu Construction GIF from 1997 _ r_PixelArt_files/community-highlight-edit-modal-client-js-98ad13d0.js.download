import{aU as t,$ as e,aV as s,aW as a,i as o,_ as i,n as l,j as n,s as r,q as d,I as h,x as p,l as c,h as m}from"./icon-29bbe755.js";import{a5 as u,a4 as g,cE as b,W as f,t as y,l as v,I as w,k as E,d as S,S as N,b as x,_ as j}from"./shell-38e4146f.js";import{d as I}from"./dropdownButton-309f6234.js";import{l as B}from"./list-item-290baf48.js";import{g as T}from"./utils-147dae00.js";import{h as k}from"./modActions-b6ac3bac.js";import{P as A}from"./postUpdate-a3d942b6.js";import"./shreddit-modal-content-849e99f1.js";import"./faceplate-dropdown-menu-13cc41dc.js";import"./faceplate-menu-f85d1ee9.js";import"./community-highlight-card-e2bea491.js";import"./modActions-112bd6f6.js";import"./faceplate-modal-f4c056ae.js";import"./popper-controller-267df72e.js";import"./makeEventDispatcher-ddce7d90.js";import"./throttle-cde4a556.js";import"./community-highlight-card-71faa8df.js";let $=g;async function C(t){const e={input:t},{data:s,errors:a}=await $({operation:u.UpdateHighlightedPost,variables:e});if(a?.length)throw new Error(T());const{updateHighlightedPost:o}=s;if(!o?.ok)throw new Error(T())}const L=["NONE",...Object.values(b)],O={NONE:()=>"No label",[b.Event]:()=>"Event",[b.Megathread]:()=>"Megathread",[b.Announcement]:()=>"Announcement",[b.ShowPostFlair]:()=>"Show post flair"},H={NONE:()=>null,[b.Event]:()=>t({}),[b.Megathread]:()=>e({}),[b.Announcement]:()=>s({}),[b.ShowPostFlair]:()=>a({})},P=f(r);let _=class extends P{constructor(){super(...arguments),this.dialogId="",this.postId="",this.isNsfw=!1,this.isSpoiler=!1,this.isBlurred=!1,this.hasFlair=!1,this.mode="create",this.isLoading=!1,this._pubSubController=new v(this),this.close=()=>{if(this.dialogId){document.getElementById(this.dialogId)?.hide()}},this.apply=async()=>{if(this.isLoading||!this.postId)return;const t={postId:this.postId,label:this.labelType};try{this.isLoading=!0,await this._updateHighlightedPost(t),this.showSuccessToast(),this.publishHighlightUpdate(),this.trackEvent(k(this.postId,w())),this.close()}catch(t){this.showErrorToast()}finally{this.isLoading=!1}},this._updateHighlightedPost=C}getTrackingContext(){return{post:{id:this.postId}}}selectLabel(t){this.labelType="NONE"===t?void 0:t}publishHighlightUpdate(){this._pubSubController.publish(E.PostUpdated,{postId:this.postId,action:A.updateHighlightedPost,value:!0}),this._pubSubController.publish(E.ReloadHighlights)}showSuccessToast(){const t=S("faceplate-alert",{level:N.info,message:"Community highlights updated"});this.dispatchEvent(t)}showErrorToast(){const t=S("faceplate-alert",{level:N.error,message:"Unable to update community highlights"});this.dispatchEvent(t)}renderCloseBtn(){return x({appearance:"secondary",leadingIcon:d({size:h.Small,attributes:{className:"inline-flex"}}),attributes:{onclick:this.close,slot:"closeButton"},size:j.Small})}renderSaveBtn(){return x({appearance:"primary",attributes:{onclick:this.apply,disabled:this.isLoading,slot:"primaryButton"},children:"edit"===this.mode?"Save":"Add"})}renderCancelBtn(){return x({appearance:"secondary",attributes:{slot:"secondaryButton",onclick:this.close},children:"Cancel"})}renderLabelSelector(){const t=this.labelType||"NONE";return p`\n <faceplate-dropdown-menu class="mt-2xs" position="bottom-start">\n ${I({appearance:"secondary",attributes:{className:"w-full justify-between"},children:p`\n <span class="flex items-center gap-xs">\n ${H[t]()} ${O[t]()}\n </span>\n `})}\n\n <faceplate-menu slot="menu">\n ${L.map((e=>B({label:O[e](),leadingIcon:H[e](),selected:e===t,disabled:e===b.ShowPostFlair&&!this.hasFlair,onClick:()=>this.selectLabel(e)})))}\n </faceplate-menu>\n </faceplate-dropdown-menu>\n `}render(){return p`\n <shreddit-modal-content no-padding-content class="max-h-[var(--modal-height)] box-border">\n <span slot="title" class="w-[var(--content-width)] p-md pr-2xl xs:pr-md box-border">\n ${"edit"===this.mode?"Edit community highlight":"Add to community highlights"}\n </span>\n\n <div class="flex xs:flex-row flex-col gap-x-md gap-y-md w-full">\n <div class="flex justify-center">\n <faceplate-tracker \n source="moderator" \n action="view" \n noun="edit_highlight" \n data-faceplate-tracking-context="${JSON.stringify(this.getTrackingContext())}" \n>\n <community-highlight-card \n ?nsfw="${this.isNsfw}" \n ?spoiler="${this.isSpoiler}" \n ?blurred="${this.isBlurred}" \n src="${c(this.src||void 0)}" \n class="w-[174px]" \n>\n <slot name="highlight-title" slot="title"></slot>\n <span slot="label" id="label">\n <slot name="author-icon"></slot>\n <slot name="event-label" class="hidden"></slot>\n <slot name="megathread-label" class="hidden"></slot>\n <slot name="announcement-label" class="hidden"></slot>\n <slot name="flair" class="hidden"></slot>\n </span>\n </community-highlight-card>\n </faceplate-tracker>\n </div>\n\n <div class="flex-1">\n <span class="text-10 uppercase font-semibold">\n Label\n </span>\n ${this.renderLabelSelector()}\n </div>\n </div>\n\n ${this.renderSaveBtn()} ${this.renderCancelBtn()} ${this.renderCloseBtn()}\n </shreddit-modal-content>\n `}};_.styles=[o`:host{--content-width:min(340px, calc(100vw - var(--size-2xl)));--modal-height:calc(var(--viewport-height) - var(--size-5xl))}:host([label-type=ANNOUNCEMENT]) slot[name=author-icon],:host([label-type=EVENT]) slot[name=author-icon],:host([label-type=MEGATHREAD]) slot[name=author-icon],:host([label-type=SHOW_POST_FLAIR]) slot[name=author-icon]{display:none}:host([label-type=EVENT]) slot[name=event-label]{display:block}:host([label-type=MEGATHREAD]) slot[name=megathread-label]{display:block}:host([label-type=ANNOUNCEMENT]) slot[name=announcement-label]{display:block}:host([label-type=SHOW_POST_FLAIR]) slot[name=flair]{display:block}`,y],i([l({type:String,attribute:"dialog-id"})],_.prototype,"dialogId",void 0),i([l({type:String,attribute:"post-id"})],_.prototype,"postId",void 0),i([l({type:Boolean,attribute:"nsfw",reflect:!0})],_.prototype,"isNsfw",void 0),i([l({type:Boolean,attribute:"spoiler",reflect:!0})],_.prototype,"isSpoiler",void 0),i([l({type:Boolean,attribute:"blurred",reflect:!0})],_.prototype,"isBlurred",void 0),i([l({type:Boolean,attribute:"has-flair"})],_.prototype,"hasFlair",void 0),i([l({type:String,reflect:!0})],_.prototype,"src",void 0),i([l({type:String,reflect:!0})],_.prototype,"mode",void 0),i([l({type:String,attribute:"label-type",reflect:!0})],_.prototype,"labelType",void 0),i([n()],_.prototype,"isLoading",void 0),_=i([m("community-highlight-edit-modal")],_);
//# sourceMappingURL=community-highlight-edit-modal-client-js-98ad13d0.js.map
